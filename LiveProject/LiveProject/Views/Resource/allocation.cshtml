@model LiveProject.Models.Allocation@{    ViewBag.Title = "Allocation";}<style>    fieldset {        border: 1px solid #ddd !important;        margin: 0;        padding: 10px;        position: relative;        border-radius: 4px;        background-color: #f5f5f5;        padding-left: 20px !important;    }    legend {        font-size: 14px;        font-weight: bold;        margin-bottom: -15px;        width: 35%;        border-radius: 4px;        padding: 5px 5px 5px 20px;        color: blue;        position: absolute;        top: -15px;        left: 10px;    }</style>@using (Html.BeginForm()){@Html.AntiForgeryToken()<h6 class="mt-5">Sigma Solve Allocation Management</h6><fieldset class="mt-4">    <legend>        Details    </legend>    <div class="container form-container p-4">        <form>            <div class="row">                <div class="col-md-2 ms-0 fw-bold">                    @Html.LabelFor(model => model.projId, htmlAttributes: new { @class = "control-label" })                </div>                <div class="col-md-2 w-25 ms-0">                    @Html.DropDownListFor(model => model.projId, ViewBag.projectList as List<SelectListItem>, "---Select---", new { @class = "form-control", placeholder = "Select Project" })                    @Html.ValidationMessageFor(model => model.projId, "", new { @class = "text-danger" })                </div>                <div class="col-md-2 fw-bold ms-5">                    @Html.LabelFor(model => model.allocation1, htmlAttributes: new { @class = "control-label" })                </div>                <div class="col-md-2 w-25">                    @Html.EditorFor(model => model.allocation1, new { htmlAttributes = new { @class = "form-control", placeholder = "Allocation" } })                    @Html.ValidationMessageFor(model => model.allocation1, "", new { @class = "text-danger" })                </div>            </div>            <div class="row mt-3">                <div class="col-md-2 ms-0 fw-bold">                    @Html.LabelFor(model => model.resId, htmlAttributes: new { @class = "control-label" })                </div>                <div class="col-md-2 w-25 ms-0">                    @Html.DropDownListFor(model => model.resId, ViewBag.projectList as List<SelectListItem>, "---Select---", new { @class = "form-control", placeholder = "Select Resource" })                    @Html.ValidationMessageFor(model => model.resId, "", new { @class = "text-danger" })                </div>                <div class="col-md-2 fw-bold ms-5">                    @Html.LabelFor(model => model.isBillable, htmlAttributes: new { @class = "control-label" })                </div>                <div class="col-md-2 w-25">                    @Html.DropDownListFor(model => model.isBillable, new List<SelectListItem>                           {                           new SelectListItem { Text = "True", Value = "true" },                           new SelectListItem { Text = "False", Value = "false" }                       }, "--Select--", new { @class = "form-control", placeholder = "Select Billable" })                    @Html.ValidationMessageFor(model => model.isBillable, "", new { @class = "text-danger" })                </div>            </div>            <div class="row mt-3">                <div class="col-md-2 fw-bold">                    @Html.LabelFor(model => model.startDate, htmlAttributes: new { @class = "control-label" })                </div>                <div class="col-md-2 w-25">                    @Html.EditorFor(model => model.startDate, new { htmlAttributes = new { @class = "form-control" } })                    @Html.ValidationMessageFor(model => model.startDate, "", new { @class = "text-danger" })                </div>                <div class="col-md-2 fw-bold ms-5">                    @Html.LabelFor(model => model.technology)                </div>                <div class="col-md-2 w-25">                    @Html.DropDownListFor(model => model.technology, ViewBag.projectList as List<SelectListItem>, "---Select---", new { @class = "form-control ", placeholder = "Select Technology" })                    @Html.ValidationMessageFor(model => model.technology, "", new { @class = "text-danger" })                </div>            </div>            <div class="row mt-3">                <div class="col-md-2 fw-bold">                    @Html.LabelFor(model => model.endDate, htmlAttributes: new { @class = "control-label" })                </div>                <div class="col-md-2 w-25">                    @Html.EditorFor(model => model.startDate, new { htmlAttributes = new { @class = "form-control" } })                    @Html.ValidationMessageFor(model => model.startDate, "", new { @class = "text-danger" })                </div>                <div class="col-md-2 ms-5">                    <button type="submit" class="btn text-dark fw-bold w-100" style="background-color: #82E0AA;">Save</button>                </div>                <div class="col-md-2">                    <button type="reset" class="btn btn-secondary text-dark fw-bold w-100" style="background-color: #F08080">Reset</button>                </div>            </div>        </form>    </div></fieldset>}@section Scripts {    @Scripts.Render("~/bundles/jqueryval")}